plugins {
    id 'java'
}

group = 'me.stahu'
version = '1.0.0-alpha0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    // Spigot
    compileOnly("org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT")
    testImplementation("org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT")
    // Lombok
    compileOnly "org.projectlombok:lombok:1.18.34"
    annotationProcessor "org.projectlombok:lombok:1.18.34"
    // JetBrains Annotations
    compileOnly 'org.jetbrains:annotations:24.1.0'
    // Snake YAML
    implementation 'org.yaml:snakeyaml:2.2'
    // JUnit 5
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.3")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.3")
    // AssertJ
    testImplementation 'org.assertj:assertj-core:3.26.3'
    // Mockito
    testImplementation("org.mockito:mockito-junit-jupiter:5.12.0")
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
